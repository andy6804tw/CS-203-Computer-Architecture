<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Adding Third-level Data Cache</title>
</head>

<body>

<p align="center"><font color="#FF0000"><b><font face="Comic Sans MS" size="5">
Adding Third-level Data Cache (dl3) and Instruction Cache (il3)</font></b></font></p>
<h3><font face="Comic Sans MS"><b><font color="#0000FF">Overview:</font> </b>
</font></h3>
<p><font face="Comic Sans MS">The purpose of this lab is to get familiar with 
cache hierarchical structure and its implementation in SimpleScalar. You need to 
modify the C/C++ source code in&nbsp; <font color="#008000">sim-cache.c</font>
file to add a 
third-level data cache and a third-level instruction cache. After you modify the 
code, recompile it using command: <br>
<font color="#000080">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
make</font></font></p>
<p><font face="Comic Sans MS">you will get new simulation tool: &quot;<font color="#008000">sim-cache</font>&quot;&nbsp; 
with extended functionality. You need to use the two provided configuration files 
(<a href="lab3_cache1.cfg">lab3_cache1.cfg</a> and <a href="lab3_cache2.cfg">lab3_cache2.cfg</a>)
on <font color="#008080">test-math</font> to test if your implementation is correct.&nbsp;
Use the following command</font></p>
<p><font face="Comic Sans MS"><font color="#800000">/simplesim-3.0/</font><font color="#000080">./sim-cache
-config lab3_cache1.cfg -redir:sim sim_lab3_cache1.out
./test-math</font></font></p>
<p><font face="Comic Sans MS">Here is the simulation output file&nbsp;<a href="sim_lab3_cache1.out">sim_lab3_cache1.out</a> when running simulation using 
configuration <a href="lab3_cache1.cfg">lab3_cache1.cfg</a> on <font color="#008080">test-math</font>&nbsp;</font></p>
<h3><font face="Comic Sans MS" color="#0000FF"><b>Hints: </b></font></h3>
<font face="Comic Sans MS">There are many source files related to generating 
simulation tool &quot;<font color="#008000">sim-cache</font>&quot;, such as main.c, cache.h, cache.c, sim-cache.c etc.
For this lab, you only need to modify <font color="#008000">sim-cache.c</font> 
to add level-3 caches<br>
&nbsp; </font>
<p><font face="Comic Sans MS"><b>some related functions in sim-cache.c:</b><br>
&nbsp;</font></p>
<ul>
	<font face="Comic Sans MS"><font color="#000080">sim_reg_options(struct opt_odb_t
    *odb)</font>: /* 
	register simulator-specific options*/ <br>
    <font color="#000080">sim_check_options(...)</font>: /* check simulator-specific option values */ <br>
    <font color="#000080">
	sim_reg_stats(struct stat_sdb_t *sdb)</font>: /* register simulator-specific 
	statistics */ <br>
    <font color="#000080">dl1_access_fn(...)</font>: /* l1 data cache l1 block miss handler function */ <br>
    <font color="#000080">dl2_access_fn(...)</font>: /* l2 data cache l2 block miss handler function */ <br>
    <font color="#000080">il1_access_fn(...)</font>: /*l1 inst cache l1 block miss handler function */ <br>
    <font color="#000080">il2_access_fn(...)</font>: /*l2 inst cache l2 block miss handler function */ <br>
    <font color="#000080">sim_main(void)</font>:/*start simulation, program loaded, processor precise state 
	initialized */ </font>
	<p><font face="Comic Sans MS">Take printout of this file and mark the above 
	functions. Then go through them one by one and see how IL1 , IL2, DL1 and 
	DL2 are implemented
	in these functions. Also pay attention to variables that are declared above
    these functions and are used in these functions. This is how i was able to do it.</font></p>
	<p><font face="Comic Sans MS">you should describe how to implement a level-3 
	instruction cache and a level-3 data cache in SimpleScalar. You should also 
	attach the modified source code :<font color="#008000"> sim-cache.c</font>, 
	and mark the place where you make modification. Run simulations using 
	provided simulation configuration file(<a href="lab3_cache1.cfg">lab3_cache1.cfg</a> 
	and <a href="lab3_cache2.cfg">lab3_cache2.cfg</a> ), for each run you should 
	submit one output file as described in Overview.</font> </p>
</ul>

</body>

</html>
